# docker-compose.yml
version: '3.8'

services:
  mysql_db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      DB_HOST: mysql_db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      LOG_DEBUG_MODE: "true"
    depends_on:
      mysql_db:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
      - "5173:5173" # Opcional, para desenvolvimento local se precisar
    environment:
      # ALTERAÇÃO CRUCIAL AQUI: Usar o IP público do seu servidor
      # Este IP será o hostname que o navegador do cliente usará para se conectar ao backend.
      # Se o backend também precisa fazer requisições para si mesmo (raro para seu caso),
      # ou para outros serviços do compose, isso não afetaria.
      VITE_BACKEND_URL: http://192.168.0.217:8080 # <-- USE O IP REAL DO SEU SERVIDOR AQUI
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend # Manter para desenvolvimento
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: