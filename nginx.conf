# nginx.conf
server {
    listen 80;
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Proxy para o backend (se necessário para API, mas com Cors já configurado, geralmente não é preciso)
    # No entanto, se o frontend fizer chamadas diretas para o nome do serviço do backend dentro do Docker Compose,
    # esta configuração de proxy no Nginx do frontend não seria estritamente necessária para a comunicação inter-container.
    # Mas é uma boa prática ter uma rota de proxy caso você precise esconder a URL do backend do cliente ou em cenários mais complexos.
    # Por agora, o frontend chamará o backend diretamente via nome do serviço.
    # location /api {
    #     proxy_pass http://backend:8080; # 'backend' é o nome do serviço no docker-compose
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
    # }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}