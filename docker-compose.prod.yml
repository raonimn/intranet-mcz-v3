# docker-compose.prod.yml
version: '3.8'

services:
  # Nomes de serviço simplificados
  mysql_db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: America/Maceio
    volumes:
      - mysql_data_prod:/var/lib/mysql
    ports:
      - "${DB_PORT_PROD}:3306"
    networks:
      - app-network-prod
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8080"
    environment:
      PORT: 8080
      DB_HOST: mysql_db # Aponta para o nome de serviço correto
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      mysql_db:
        condition: service_healthy
    networks:
      - app-network-prod

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "${HOST_PORT_HTTP_PROD}:80"
    environment:
      VITE_BACKEND_URL: /api
    depends_on:
      - backend
    networks:
      - app-network-prod

networks:
  app-network-prod:
    driver: bridge

volumes:
  mysql_data_prod: